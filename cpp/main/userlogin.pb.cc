// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: userlogin.proto

#include "userlogin.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace userlogin {
class UserInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserInfo> _instance;
} _UserInfo_default_instance_;
class AddReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddReply> _instance;
} _AddReply_default_instance_;
class LoginReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginReply> _instance;
} _LoginReply_default_instance_;
class UserLoginInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserLoginInfo> _instance;
} _UserLoginInfo_default_instance_;
class IsReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IsReply> _instance;
} _IsReply_default_instance_;
}  // namespace userlogin
static void InitDefaultsUserInfo_userlogin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::userlogin::_UserInfo_default_instance_;
    new (ptr) ::userlogin::UserInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::userlogin::UserInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserInfo_userlogin_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserInfo_userlogin_2eproto}, {}};

static void InitDefaultsAddReply_userlogin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::userlogin::_AddReply_default_instance_;
    new (ptr) ::userlogin::AddReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::userlogin::AddReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AddReply_userlogin_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAddReply_userlogin_2eproto}, {}};

static void InitDefaultsLoginReply_userlogin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::userlogin::_LoginReply_default_instance_;
    new (ptr) ::userlogin::LoginReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::userlogin::LoginReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoginReply_userlogin_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoginReply_userlogin_2eproto}, {}};

static void InitDefaultsUserLoginInfo_userlogin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::userlogin::_UserLoginInfo_default_instance_;
    new (ptr) ::userlogin::UserLoginInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::userlogin::UserLoginInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserLoginInfo_userlogin_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserLoginInfo_userlogin_2eproto}, {}};

static void InitDefaultsIsReply_userlogin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::userlogin::_IsReply_default_instance_;
    new (ptr) ::userlogin::IsReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::userlogin::IsReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IsReply_userlogin_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIsReply_userlogin_2eproto}, {}};

void InitDefaults_userlogin_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_UserInfo_userlogin_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddReply_userlogin_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginReply_userlogin_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserLoginInfo_userlogin_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IsReply_userlogin_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_userlogin_2eproto[5];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_userlogin_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_userlogin_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_userlogin_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::userlogin::UserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::userlogin::UserInfo, name_),
  PROTOBUF_FIELD_OFFSET(::userlogin::UserInfo, password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::userlogin::AddReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::userlogin::AddReply, rscode_),
  PROTOBUF_FIELD_OFFSET(::userlogin::AddReply, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::userlogin::LoginReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::userlogin::LoginReply, rscode_),
  PROTOBUF_FIELD_OFFSET(::userlogin::LoginReply, message_),
  PROTOBUF_FIELD_OFFSET(::userlogin::LoginReply, handlecode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::userlogin::UserLoginInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::userlogin::UserLoginInfo, name_),
  PROTOBUF_FIELD_OFFSET(::userlogin::UserLoginInfo, handlecode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::userlogin::IsReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::userlogin::IsReply, message_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::userlogin::UserInfo)},
  { 7, -1, sizeof(::userlogin::AddReply)},
  { 14, -1, sizeof(::userlogin::LoginReply)},
  { 22, -1, sizeof(::userlogin::UserLoginInfo)},
  { 29, -1, sizeof(::userlogin::IsReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::userlogin::_UserInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::userlogin::_AddReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::userlogin::_LoginReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::userlogin::_UserLoginInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::userlogin::_IsReply_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_userlogin_2eproto = {
  {}, AddDescriptors_userlogin_2eproto, "userlogin.proto", schemas,
  file_default_instances, TableStruct_userlogin_2eproto::offsets,
  file_level_metadata_userlogin_2eproto, 5, file_level_enum_descriptors_userlogin_2eproto, file_level_service_descriptors_userlogin_2eproto,
};

const char descriptor_table_protodef_userlogin_2eproto[] =
  "\n\017userlogin.proto\022\tuserlogin\"*\n\010UserInfo"
  "\022\014\n\004name\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\"+\n\010AddR"
  "eply\022\016\n\006rscode\030\001 \001(\t\022\017\n\007message\030\002 \001(\t\"A\n"
  "\nLoginReply\022\016\n\006rscode\030\001 \001(\t\022\017\n\007message\030\002"
  " \001(\t\022\022\n\nhandlecode\030\003 \001(\t\"1\n\rUserLoginInf"
  "o\022\014\n\004name\030\001 \001(\t\022\022\n\nhandlecode\030\002 \001(\t\"\032\n\007I"
  "sReply\022\017\n\007message\030\001 \001(\t2\261\001\n\004User\0225\n\007AddU"
  "ser\022\023.userlogin.UserInfo\032\023.userlogin.Add"
  "Reply\"\000\0227\n\007LoginIn\022\023.userlogin.UserInfo\032"
  "\025.userlogin.LoginReply\"\000\0229\n\007IsLogin\022\030.us"
  "erlogin.UserLoginInfo\032\022.userlogin.IsRepl"
  "y\"\000b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_userlogin_2eproto = {
  false, InitDefaults_userlogin_2eproto, 
  descriptor_table_protodef_userlogin_2eproto,
  "userlogin.proto", &assign_descriptors_table_userlogin_2eproto, 451,
};

void AddDescriptors_userlogin_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_userlogin_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_userlogin_2eproto = []() { AddDescriptors_userlogin_2eproto(); return true; }();
namespace userlogin {

// ===================================================================

void UserInfo::InitAsDefaultInstance() {
}
class UserInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserInfo::kNameFieldNumber;
const int UserInfo::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserInfo::UserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:userlogin.UserInfo)
}
UserInfo::UserInfo(const UserInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:userlogin.UserInfo)
}

void UserInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UserInfo_userlogin_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UserInfo::~UserInfo() {
  // @@protoc_insertion_point(destructor:userlogin.UserInfo)
  SharedDtor();
}

void UserInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UserInfo& UserInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UserInfo_userlogin_2eproto.base);
  return *internal_default_instance();
}


void UserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:userlogin.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UserInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UserInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("userlogin.UserInfo.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string password = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("userlogin.UserInfo.password");
        object = msg->mutable_password();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:userlogin.UserInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "userlogin.UserInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "userlogin.UserInfo.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:userlogin.UserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:userlogin.UserInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:userlogin.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userlogin.UserInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userlogin.UserInfo.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:userlogin.UserInfo)
}

::google::protobuf::uint8* UserInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:userlogin.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userlogin.UserInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userlogin.UserInfo.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:userlogin.UserInfo)
  return target;
}

size_t UserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:userlogin.UserInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:userlogin.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UserInfo* source =
      ::google::protobuf::DynamicCastToGenerated<UserInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:userlogin.UserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:userlogin.UserInfo)
    MergeFrom(*source);
  }
}

void UserInfo::MergeFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:userlogin.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void UserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:userlogin.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfo::CopyFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:userlogin.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfo::IsInitialized() const {
  return true;
}

void UserInfo::Swap(UserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserInfo::InternalSwap(UserInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata UserInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_userlogin_2eproto);
  return ::file_level_metadata_userlogin_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AddReply::InitAsDefaultInstance() {
}
class AddReply::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddReply::kRscodeFieldNumber;
const int AddReply::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddReply::AddReply()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:userlogin.AddReply)
}
AddReply::AddReply(const AddReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rscode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rscode().size() > 0) {
    rscode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rscode_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:userlogin.AddReply)
}

void AddReply::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AddReply_userlogin_2eproto.base);
  rscode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AddReply::~AddReply() {
  // @@protoc_insertion_point(destructor:userlogin.AddReply)
  SharedDtor();
}

void AddReply::SharedDtor() {
  rscode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddReply& AddReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AddReply_userlogin_2eproto.base);
  return *internal_default_instance();
}


void AddReply::Clear() {
// @@protoc_insertion_point(message_clear_start:userlogin.AddReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rscode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AddReply::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AddReply*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string rscode = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("userlogin.AddReply.rscode");
        object = msg->mutable_rscode();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string message = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("userlogin.AddReply.message");
        object = msg->mutable_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AddReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:userlogin.AddReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string rscode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rscode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rscode().data(), static_cast<int>(this->rscode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "userlogin.AddReply.rscode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "userlogin.AddReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:userlogin.AddReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:userlogin.AddReply)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AddReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:userlogin.AddReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string rscode = 1;
  if (this->rscode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rscode().data(), static_cast<int>(this->rscode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userlogin.AddReply.rscode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->rscode(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userlogin.AddReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:userlogin.AddReply)
}

::google::protobuf::uint8* AddReply::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:userlogin.AddReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string rscode = 1;
  if (this->rscode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rscode().data(), static_cast<int>(this->rscode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userlogin.AddReply.rscode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->rscode(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userlogin.AddReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:userlogin.AddReply)
  return target;
}

size_t AddReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:userlogin.AddReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rscode = 1;
  if (this->rscode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rscode());
  }

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:userlogin.AddReply)
  GOOGLE_DCHECK_NE(&from, this);
  const AddReply* source =
      ::google::protobuf::DynamicCastToGenerated<AddReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:userlogin.AddReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:userlogin.AddReply)
    MergeFrom(*source);
  }
}

void AddReply::MergeFrom(const AddReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:userlogin.AddReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rscode().size() > 0) {

    rscode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rscode_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void AddReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:userlogin.AddReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddReply::CopyFrom(const AddReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:userlogin.AddReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddReply::IsInitialized() const {
  return true;
}

void AddReply::Swap(AddReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddReply::InternalSwap(AddReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  rscode_.Swap(&other->rscode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata AddReply::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_userlogin_2eproto);
  return ::file_level_metadata_userlogin_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LoginReply::InitAsDefaultInstance() {
}
class LoginReply::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginReply::kRscodeFieldNumber;
const int LoginReply::kMessageFieldNumber;
const int LoginReply::kHandlecodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginReply::LoginReply()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:userlogin.LoginReply)
}
LoginReply::LoginReply(const LoginReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rscode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rscode().size() > 0) {
    rscode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rscode_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  handlecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.handlecode().size() > 0) {
    handlecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handlecode_);
  }
  // @@protoc_insertion_point(copy_constructor:userlogin.LoginReply)
}

void LoginReply::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LoginReply_userlogin_2eproto.base);
  rscode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  handlecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LoginReply::~LoginReply() {
  // @@protoc_insertion_point(destructor:userlogin.LoginReply)
  SharedDtor();
}

void LoginReply::SharedDtor() {
  rscode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  handlecode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoginReply& LoginReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LoginReply_userlogin_2eproto.base);
  return *internal_default_instance();
}


void LoginReply::Clear() {
// @@protoc_insertion_point(message_clear_start:userlogin.LoginReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rscode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  handlecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LoginReply::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LoginReply*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string rscode = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("userlogin.LoginReply.rscode");
        object = msg->mutable_rscode();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string message = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("userlogin.LoginReply.message");
        object = msg->mutable_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string handlecode = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("userlogin.LoginReply.handlecode");
        object = msg->mutable_handlecode();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LoginReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:userlogin.LoginReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string rscode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rscode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rscode().data(), static_cast<int>(this->rscode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "userlogin.LoginReply.rscode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "userlogin.LoginReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string handlecode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_handlecode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->handlecode().data(), static_cast<int>(this->handlecode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "userlogin.LoginReply.handlecode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:userlogin.LoginReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:userlogin.LoginReply)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LoginReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:userlogin.LoginReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string rscode = 1;
  if (this->rscode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rscode().data(), static_cast<int>(this->rscode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userlogin.LoginReply.rscode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->rscode(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userlogin.LoginReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // string handlecode = 3;
  if (this->handlecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handlecode().data(), static_cast<int>(this->handlecode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userlogin.LoginReply.handlecode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->handlecode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:userlogin.LoginReply)
}

::google::protobuf::uint8* LoginReply::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:userlogin.LoginReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string rscode = 1;
  if (this->rscode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rscode().data(), static_cast<int>(this->rscode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userlogin.LoginReply.rscode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->rscode(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userlogin.LoginReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // string handlecode = 3;
  if (this->handlecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handlecode().data(), static_cast<int>(this->handlecode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userlogin.LoginReply.handlecode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->handlecode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:userlogin.LoginReply)
  return target;
}

size_t LoginReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:userlogin.LoginReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rscode = 1;
  if (this->rscode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rscode());
  }

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // string handlecode = 3;
  if (this->handlecode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->handlecode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:userlogin.LoginReply)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginReply* source =
      ::google::protobuf::DynamicCastToGenerated<LoginReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:userlogin.LoginReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:userlogin.LoginReply)
    MergeFrom(*source);
  }
}

void LoginReply::MergeFrom(const LoginReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:userlogin.LoginReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rscode().size() > 0) {

    rscode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rscode_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.handlecode().size() > 0) {

    handlecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handlecode_);
  }
}

void LoginReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:userlogin.LoginReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginReply::CopyFrom(const LoginReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:userlogin.LoginReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginReply::IsInitialized() const {
  return true;
}

void LoginReply::Swap(LoginReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginReply::InternalSwap(LoginReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  rscode_.Swap(&other->rscode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  handlecode_.Swap(&other->handlecode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata LoginReply::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_userlogin_2eproto);
  return ::file_level_metadata_userlogin_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UserLoginInfo::InitAsDefaultInstance() {
}
class UserLoginInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserLoginInfo::kNameFieldNumber;
const int UserLoginInfo::kHandlecodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserLoginInfo::UserLoginInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:userlogin.UserLoginInfo)
}
UserLoginInfo::UserLoginInfo(const UserLoginInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  handlecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.handlecode().size() > 0) {
    handlecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handlecode_);
  }
  // @@protoc_insertion_point(copy_constructor:userlogin.UserLoginInfo)
}

void UserLoginInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UserLoginInfo_userlogin_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  handlecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UserLoginInfo::~UserLoginInfo() {
  // @@protoc_insertion_point(destructor:userlogin.UserLoginInfo)
  SharedDtor();
}

void UserLoginInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  handlecode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserLoginInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UserLoginInfo& UserLoginInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UserLoginInfo_userlogin_2eproto.base);
  return *internal_default_instance();
}


void UserLoginInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:userlogin.UserLoginInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  handlecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UserLoginInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UserLoginInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("userlogin.UserLoginInfo.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string handlecode = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("userlogin.UserLoginInfo.handlecode");
        object = msg->mutable_handlecode();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UserLoginInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:userlogin.UserLoginInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "userlogin.UserLoginInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string handlecode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_handlecode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->handlecode().data(), static_cast<int>(this->handlecode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "userlogin.UserLoginInfo.handlecode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:userlogin.UserLoginInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:userlogin.UserLoginInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UserLoginInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:userlogin.UserLoginInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userlogin.UserLoginInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string handlecode = 2;
  if (this->handlecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handlecode().data(), static_cast<int>(this->handlecode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userlogin.UserLoginInfo.handlecode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->handlecode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:userlogin.UserLoginInfo)
}

::google::protobuf::uint8* UserLoginInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:userlogin.UserLoginInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userlogin.UserLoginInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string handlecode = 2;
  if (this->handlecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handlecode().data(), static_cast<int>(this->handlecode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userlogin.UserLoginInfo.handlecode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->handlecode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:userlogin.UserLoginInfo)
  return target;
}

size_t UserLoginInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:userlogin.UserLoginInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string handlecode = 2;
  if (this->handlecode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->handlecode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserLoginInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:userlogin.UserLoginInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UserLoginInfo* source =
      ::google::protobuf::DynamicCastToGenerated<UserLoginInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:userlogin.UserLoginInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:userlogin.UserLoginInfo)
    MergeFrom(*source);
  }
}

void UserLoginInfo::MergeFrom(const UserLoginInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:userlogin.UserLoginInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.handlecode().size() > 0) {

    handlecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handlecode_);
  }
}

void UserLoginInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:userlogin.UserLoginInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserLoginInfo::CopyFrom(const UserLoginInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:userlogin.UserLoginInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLoginInfo::IsInitialized() const {
  return true;
}

void UserLoginInfo::Swap(UserLoginInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserLoginInfo::InternalSwap(UserLoginInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  handlecode_.Swap(&other->handlecode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata UserLoginInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_userlogin_2eproto);
  return ::file_level_metadata_userlogin_2eproto[kIndexInFileMessages];
}


// ===================================================================

void IsReply::InitAsDefaultInstance() {
}
class IsReply::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IsReply::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IsReply::IsReply()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:userlogin.IsReply)
}
IsReply::IsReply(const IsReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:userlogin.IsReply)
}

void IsReply::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_IsReply_userlogin_2eproto.base);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

IsReply::~IsReply() {
  // @@protoc_insertion_point(destructor:userlogin.IsReply)
  SharedDtor();
}

void IsReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IsReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IsReply& IsReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_IsReply_userlogin_2eproto.base);
  return *internal_default_instance();
}


void IsReply::Clear() {
// @@protoc_insertion_point(message_clear_start:userlogin.IsReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IsReply::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<IsReply*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string message = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("userlogin.IsReply.message");
        object = msg->mutable_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IsReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:userlogin.IsReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "userlogin.IsReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:userlogin.IsReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:userlogin.IsReply)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IsReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:userlogin.IsReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userlogin.IsReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:userlogin.IsReply)
}

::google::protobuf::uint8* IsReply::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:userlogin.IsReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userlogin.IsReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:userlogin.IsReply)
  return target;
}

size_t IsReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:userlogin.IsReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IsReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:userlogin.IsReply)
  GOOGLE_DCHECK_NE(&from, this);
  const IsReply* source =
      ::google::protobuf::DynamicCastToGenerated<IsReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:userlogin.IsReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:userlogin.IsReply)
    MergeFrom(*source);
  }
}

void IsReply::MergeFrom(const IsReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:userlogin.IsReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void IsReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:userlogin.IsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IsReply::CopyFrom(const IsReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:userlogin.IsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IsReply::IsInitialized() const {
  return true;
}

void IsReply::Swap(IsReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IsReply::InternalSwap(IsReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata IsReply::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_userlogin_2eproto);
  return ::file_level_metadata_userlogin_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace userlogin
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::userlogin::UserInfo* Arena::CreateMaybeMessage< ::userlogin::UserInfo >(Arena* arena) {
  return Arena::CreateInternal< ::userlogin::UserInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::userlogin::AddReply* Arena::CreateMaybeMessage< ::userlogin::AddReply >(Arena* arena) {
  return Arena::CreateInternal< ::userlogin::AddReply >(arena);
}
template<> PROTOBUF_NOINLINE ::userlogin::LoginReply* Arena::CreateMaybeMessage< ::userlogin::LoginReply >(Arena* arena) {
  return Arena::CreateInternal< ::userlogin::LoginReply >(arena);
}
template<> PROTOBUF_NOINLINE ::userlogin::UserLoginInfo* Arena::CreateMaybeMessage< ::userlogin::UserLoginInfo >(Arena* arena) {
  return Arena::CreateInternal< ::userlogin::UserLoginInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::userlogin::IsReply* Arena::CreateMaybeMessage< ::userlogin::IsReply >(Arena* arena) {
  return Arena::CreateInternal< ::userlogin::IsReply >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
